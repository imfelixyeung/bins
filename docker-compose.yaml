version: "3.7"

services:
  db:
    image: postgres:17.6-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "psql", "-U", "postgres", "-c", "select 1"]
      interval: 1s
      timeout: 30s
      retries: 15
      start_period: 1s
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    volumes:
      - db-data:/var/lib/postgresql/data

  worker:
    image: registry.digitalocean.com/felixyeung/bins:worker
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/db
    depends_on:
      - db

  web:
    image: registry.digitalocean.com/felixyeung/bins:web
    restart: unless-stopped
    labels:
      # rapidapi requests can skip rate limiting, next.js middleware will check if the secret is valid
      - "traefik.http.routers.bins-rapid.rule=HostRegexp(`.*`) && PathPrefix(`/api`) && HeaderRegexp(`X-RapidAPI-Proxy-Secret`, `.+`)"
      - "traefik.http.routers.bins-rapid.priority=20"
      # - "traefik.http.routers.bins-rapid.entrypoints=web"
      # - "traefik.http.routers.bins-rapid.service=bins-service"

      # normal user rate limiting
      - "traefik.http.routers.bins.rule=HostRegexp(`.*`)"
      - "traefik.http.routers.bins.priority=10"
      # - "traefik.http.routers.bins.entrypoints=web"
      # - "traefik.http.routers.bins.service=bins-service"
      - "traefik.http.routers.bins.middlewares=bins-ratelimit"

      # rate limit api and add cors/caching headers
      - "traefik.http.routers.bins-api.rule=HostRegexp(`.*`) && PathPrefix(`/api`)"
      - "traefik.http.routers.bins-api.priority=15"
      - "traefik.http.routers.bins-api.middlewares=bins-ratelimit,bins-api-cors,bins-api-cache"

    secrets:
      - rapid_api_proxy_secret
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/db
      - RAPID_API_PROXY_SECRET_FILE=/run/secrets/rapid_api_proxy_secret
      - SKIP_SITEMAP=
    depends_on:
      - db

  tunnel:
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    healthcheck:
      test: ["CMD", "cloudflared", "tunnel", "--metrics", "proxy:80", "ready"]
      interval: 1s
      timeout: 30s
      retries: 15
      start_period: 1s
    secrets:
      - tunnel_token
    environment:
      - TUNNEL_TOKEN_FILE=/run/secrets/tunnel_token

  migration:
    image: registry.digitalocean.com/felixyeung/bins:migration
    restart: "no"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/db
    depends_on:
      - db
    deploy:
      restart_policy:
        condition: none

  proxy:
    image: traefik:v3.5
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--log.level=INFO"
    labels:
      - "traefik.http.middlewares.bins-ratelimit.ratelimit.average=10"
      - "traefik.http.middlewares.bins-ratelimit.ratelimit.burst=100"
      - "traefik.http.middlewares.bins-ratelimit.ratelimit.period=10s"
      - "traefik.http.middlewares.bins-api-cors.headers.customresponseheaders.access-control-allow-origin=*"
      - "traefik.http.middlewares.bins-api-cache.headers.customresponseheaders.cache-control=public,max-age=60"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

secrets:
  tunnel_token:
    external: true
  rapid_api_proxy_secret:
    external: true

volumes:
  db-data:
